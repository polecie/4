from aiogram import Bot, Router, types
from aiogram.filters import Command, Text
from aiogram.fsm.context import FSMContext

from src.callbacks import BasicActions as ba
from src.commands import setup_commands
from src.core import settings
from src.keyboards import menu_keyboard
from src.services import get_user_gateway, UserApiGateway

__all__ = ("router",)

router = Router()


@router.startup()
async def startup(bot: Bot):
    await setup_commands(bot)
    await bot.send_message(settings.bot.admin_id, text="–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")


@router.shutdown()
async def shutdown(bot: Bot):
    await bot.send_message(settings.bot.admin_id, text="–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")


@router.message(Command("cancel"))
async def process_cancel_command(message: types.Message, state: FSMContext):
    current_state = await state.get_state()
    if current_state is None:
        return
    await state.clear()
    await message.answer("–î–µ–π—Å—Ç–≤–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ! –î–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∂–º–∏ /connect")


@router.callback_query(Text(ba.cancel.value))  # type: ignore
async def process_cancel_button(cback: types.CallbackQuery, state: FSMContext):
    current_state = await state.get_state()
    if current_state is None:
        return
    await state.clear()
    await cback.message.answer("–î–µ–π—Å—Ç–≤–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ! –î–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∂–º–∏ /connect")


@router.message(
    Command("start"),
)
async def start(
        message: types.Message,
        state: FSMContext,
        # user_gateway: UserApiGateway = get_user_gateway(),
) -> types.Message | None:
    # TODO: –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö,
    #  –æ—Ç–¥–∞–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ –Ω–∞–ª–∏—á–∏—é –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ
    current_state = await state.get_state()
    if current_state is not None:
        return

    user_gateway: UserApiGateway = await get_user_gateway()
    user = await user_gateway.create(message.from_user.id)

    message_success = message.answer(
            "–ü—Ä–∏–≤–µ—Ç! ü§ñ –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ–º –ø–∏—Å–µ–º —Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã\n"
            "–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /connect",
            reply_markup=menu_keyboard.as_markup(),
        )
    message_error = message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –Ω–∞–∂–∞—Ç—å –Ω–∞ /start")
    return (await message_error) if user is None else (await message_success)


# TODO: –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—á–∏—â–∞–µ—Ç —á–∞—Ç —Ç–æ —Å—Ç–µ–π—Ç –æ–±–Ω—É–ª—è–µ—Ç—Å—è
